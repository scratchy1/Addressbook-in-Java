public class LinkedListAddressBook {
private LinkedList1618<Person> personList;
public LinkedListAddressBook() {
personList = new LinkedList1618<Person>();
}
public void addPerson(Person p) {
personList.addLast(p);
}
Person getPersonByLastName(String lastName) {
LinkedList1618<Person>.ListIterator iterator = personList.listIterator();
while (iterator.hasNext()) {
Person p = iterator.next();
if (p.getLastName().equals(lastName)) return p;
}
throw new java.util.NoSuchElementException();
}
}
/*This shows the usage of a parameterized class, Iteration over a List 
with an Iterator and referencing of non-private inner classes via its containing class.
The non-static inner class ListIterator is implicitly parameterized, 
because it uses the parameter ET of LinkedList internally, the method next has the return type
Person.*/
